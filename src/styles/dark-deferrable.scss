@use "sass:meta";

@use "./util.scss" as *;

:root {
  color-scheme: dark;
}

#projects {
  .bunny image {
    filter: url("#bunny-glow");
  }

  h2 {
    &::before {
      $cyan-0: rgba(0, 39, 39, 0%);
      $cyan-1: rgba(0, 39, 39, 100%);
      $pink-0: rgba(41, 31, 33, 0%);
      $pink-1: rgba(41, 31, 33, 100%);

      border-color: #172b25;
      background:
        linear-gradient(to bottom, $pink-0 1px, $pink-1 2px, $pink-0 3px) 0 1rem / 100% 2.5rem,
        linear-gradient(to bottom, $cyan-0 1px, $cyan-1 2px, $cyan-0 0) 0 1.25rem / 100% 2.5rem,
        linear-gradient(to right, $pink-0 1px, $pink-1 2px, $pink-0 3px) 1.5rem 0 / 2.5rem 100%,
        linear-gradient(to right, $cyan-0 1px, $cyan-1 2px, $cyan-0 0) 1.25rem 0 / 2.5rem 100%;
      background-color: #302f2f;
    }

    .shadow {
      filter: url("#blur");
      text-shadow:
        0 0 0.25em #0ff,
        0 0 0.5em #0ff,
        0 0 1em #0ff,
        0 0 1.5em #0ff,
        0 0 2em #0ff,
        0 0 2.5em #0ff;
      text-shadow:
        0 0 0.25em 1px #0ff,
        0 0 0.5em 1px #0ff,
        0 0 1em 1px #0ff,
        0 0 1.5em 1px #0ff,
        0 0 2em 1px #0ff,
        0 0 2.5em 1px #0ff;
    }
  }

  .card {
    box-shadow:
      0 0 0.5rem cyan(0.5),
      0 0 1.5rem white(0.15);
    border-color: skyblue;
    background: #111;

    img {
      box-sizing: border-box;
      border: 2px solid #404040;
      background: #404040;
    }

    @mixin apply-focus-hover {
      box-shadow:
        0 0 0.5rem cyan(0.5),
        0 0 3rem cyan(0.2);
      border-color: cyan;
      background: #163c3c;

      img {
        border-color: cyan;
        background: cyan;
      }
    }

    @mixin revert-focus-hover {
      box-shadow:
        0 0 0.5rem cyan(0.5),
        0 0 1.5rem white(0.15);
      border-color: skyblue;
      background: #111;

      img {
        border-color: #404040;
        background: #404040;
      }
    }

    @include focus-hover-states(
      meta.get-mixin("apply-focus-hover"),
      meta.get-mixin("revert-focus-hover")
    );
  }

  .picoletta {
    filter: drop-shadow(0 0 1rem yellow(0.2));

    p {
      color: #eaeaea;
    }
  }

  .button-container button {
    box-shadow: 0.5rem 0.5rem 1rem 0 black(0.33);
    background: #111;

    span {
      border: none;
    }

    @mixin apply-focus-hover {
      background: #163c3c;
    }

    @mixin revert-focus-hover {
      box-shadow: 0.5rem 0.5rem 1rem 0 black(0.33);
      background: #111;
    }

    @include focus-hover-states(
      meta.get-mixin("apply-focus-hover"),
      meta.get-mixin("revert-focus-hover")
    );
  }
}

#me {
  h2 {
    transform: none;
    box-shadow: 0.5rem 0.5rem 1rem 0 black(0.33);
    background-image: linear-gradient(cyan(0.15), cyan(0));
    background-size: 100% 2px;
    background-color: black(0.75);

    .shadow {
      filter: url("#blur");
      text-shadow:
        0 0 0.25em #0ff,
        0 0 0.5em #0ff,
        0 0 1em #0ff,
        0 0 1.5em #0ff,
        0 0 2em #0ff,
        0 0 2.5em #0ff;
    }
  }

  h3 {
    color: #ddd;
  }

  .controls button {
    box-shadow: none;
    border-color: #2a2a2a;
    background: #1a1a1a;

    @mixin apply-focus-hover {
      box-shadow: 0 0 1rem rgba(255, 255, 0, 33%);
      border-color: #ffde69;
      background: #414118;
    }

    @mixin revert-focus-hover {
      box-shadow: none;
      border-color: #2a2a2a;
      background: #1a1a1a;
    }

    @include focus-hover-states(
      meta.get-mixin("apply-focus-hover"),
      meta.get-mixin("revert-focus-hover")
    );
  }
}

.faq {
  .question {
    border-color: #2a2a2a;
    background: #1a1a1a;
    -webkit-font-smoothing: antialiased;

    @mixin apply-focus-hover {
      border-color: #ffde69;
      background: #313117;

      &[aria-expanded="false"] {
        box-shadow: 0.25rem 0.25rem 0.5rem yellow(0.25);
      }

      + .answer {
        border-color: #ffde69;

        &::before {
          box-shadow: 0.25rem 0.25rem 0.5rem yellow(0.25);
        }
      }

      .bottom {
        background: #ffde69;
      }
    }

    @mixin revert-focus-hover {
      border-color: #2a2a2a;

      &[aria-expanded="false"] {
        box-shadow: none;
        background: #1a1a1a;
      }

      + .answer {
        border-color: #2a2a2a;

        &::before {
          box-shadow: none;
        }
      }

      .bottom {
        box-shadow: none;
        background: #2a2a2a;
      }
    }

    @include focus-hover-states(
      meta.get-mixin("apply-focus-hover"),
      meta.get-mixin("revert-focus-hover")
    );

    &[aria-expanded="false"] {
      &::before {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='46' height='53'%3E%3Cpath fill='%23fff' d='m0 0 46 26.5L0 53Z'/%3E%3C/svg%3E");
      }
    }

    &[aria-expanded="true"] {
      background: #2a2a2a;

      &::before {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='53' height='46'%3E%3Cpath fill='%23fff' d='M53 0 26.5 46 0 0Z'/%3E%3C/svg%3E");
      }
    }
  }

  .answer {
    box-shadow: none;
    border-color: #2a2a2a;
    background: #1a1a1a;

    p,
    ol,
    ul {
      color: #eee;
    }
  }

  .bottom {
    box-shadow: none;
    background: #2a2a2a;
  }
}

#credits {
  box-shadow: 0.5rem 0.5rem 1rem 0 aquamarine(0.1);
  background: #111;
  color: white;
}

.p-fill-bg {
  background: #0f1f18;
  background: radial-gradient(closest-side, #132c22, #0f1f18);
  fill: #0f1f18;
}

.p-fill-fg {
  fill: #972;
}

.p-stroke-fg {
  stroke: gold;
}
